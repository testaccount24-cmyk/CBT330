/*-------- REXX -------------------------------------------*/
/* Function   : display Cobanl selection menu              */
/*---------------------------------------------------------*/
/*
    trace ?r
*/

"ispexec control errors return"
parse source xx yy procname rest
signal on syntax  name failures
signal on failure name failures

arg steplib  ,              /* steplib for cobanal pgm       */
    cobaappl ,              /* applname for coba application */
    cobahlq  ,              /* hlq for coba datasets         */
    llqclib  ,              /* llq for exec und clist        */
    llqmlib  ,              /* llq for mlib                  */
    llqplib  ,              /* llq for plib                  */
    llqslib  ,              /* llq for slib                  */
    llqtlib  ,              /* llq for tlib                  */
    llqtabl  ,              /* llq tabl                      */
    account  ,
    class    ,
    msgclass ,
    ispfhlq

userhlq = userid()

"ISPEXEC VPUT (STEPLIB COBAAPPL COBAHLQ USERHLQ)"
"ISPEXEC VPUT (LLQCLIB LLQMLIB LLQPLIB LLQSLIB LLQTLIB LLQTABL)"
"ISPEXEC VPUT (ACCOUNT CLASS MSGCLASS ISPFHLQ)"

START:
"ISPEXEC DISPLAY PANEL(COBANL)"

IF RC = 12 | RC = 20
THEN do
  CALL COBA000 cobanl cobanl rc
  EXIT
end

IF ZCMD = TRACE
THEN DO
  zcmd = ' '
  trace ?r
end

IF RC = 8
THEN do
  "ISPEXEC TBEND COBANL00"
  "ISPEXEC TBEND COBANL01"
  "ISPEXEC TBEND COBANL02"
  "ISPEXEC TBEND COBANL03"
  "ISPEXEC TBEND COBANL04"
  EXIT
end


select
  when zcmd = 1
  then do
    mess1   = 'Please edit the follwoing JCL to your '
    mess2   = 'namings and submit the job'
    mess3   = 'For permant change edit member COBANAL'
    mess4   = 'in ISPSLIB dataset'
    "ISPEXEC ADDPOP ROW(03) COLUMN(10)"
    "ISPEXEC DISPLAY PANEL(COBA000)"
    IF ZCMD = TRACE
    THEN DO
      zcmd = ' '
      trace ?r
    end
    IF RC = 8
    THEN do
      "ISPEXEC TBEND COBANL00"
      "ISPEXEC TBEND COBANL01"
      "ISPEXEC TBEND COBANL02"
      "ISPEXEC TBEND COBANL03"
      "ISPEXEC TBEND COBANL04"
      "ISPEXEC REMPOP"
      signal start
    end
    mess    = 'please enter dsn of loadlib to analyse'
    "ISPEXEC REMPOP"
    "ISPEXEC ADDPOP ROW(03) COLUMN(10)"
    "ISPEXEC DISPLAY PANEL(COBANLLO)"
    IF ZCMD = TRACE
    THEN DO
      zcmd = ' '
      trace ?r
    end
    IF RC = 8
    THEN do
      "ISPEXEC TBEND COBANL00"
      "ISPEXEC TBEND COBANL01"
      "ISPEXEC TBEND COBANL02"
      "ISPEXEC TBEND COBANL03"
      "ISPEXEC TBEND COBANL04"
      "ISPEXEC REMPOP"
      signal start
    end
    "ISPEXEC REMPOP"
    "ISPEXEC ADDPOP ROW(03) COLUMN(10)"
    "ISPEXEC DISPLAY PANEL(COBANL04)"
    IF ZCMD = TRACE
    THEN DO
      zcmd = ' '
      trace ?r
    end
    IF RC = 8
    THEN do
      "ISPEXEC TBEND COBANL00"
      "ISPEXEC TBEND COBANL01"
      "ISPEXEC TBEND COBANL02"
      "ISPEXEC TBEND COBANL03"
      "ISPEXEC TBEND COBANL04"
      "ISPEXEC REMPOP"
      signal start
    end
    "ISPEXEC REMPOP"
    call cobasubp dsn t
  end
  when zcmd = 2 THEN CALL COBANLDS
  when zcmd = 3
  then do
    call open_tables
    sel = 'all cobol programs '
    tkey1   = 'PGMKEY'
    "ispexec vput tkey1"
    call cobanldt ALL ,
                  COBANL00 ,
                  COBANL01 ,
                  COBANL02 ,
                  COBANL00 ,
                  COBANLF0 ,
                  COBANLL0 ,
                  COBANLS0 ,
                  COBANL  ,
                  sel
  end
  when zcmd = 4
  then do
    call open_tables
    sel = 'all cobol compile options'
    tkey1   = 'OPTION'
    "ispexec vput tkey1"
    call cobanldt ALL ,
                  COBANL01 ,
                  COBANL00 ,
                  COBANL02 ,
                  COBANL01 ,
                  COBANLF1 ,
                  COBANLLI ,
                  COBANLS1 ,
                  COBANL  ,
                  sel
  end
  when zcmd = 5
  then do
    call open_tables
    sel = 'all cobol compiler versions'
    tkey1   = 'COBVERS'
    "ispexec vput tkey1"
    call cobanldt ALL ,
                  COBANL02 ,
                  COBANL00 ,
                  COBANL01 ,
                  COBANL02 ,
                  COBANLF2 ,
                  COBANLLI ,
                  COBANLS2 ,
                  COBANL  ,
                  sel
  end
  when zcmd = 6
  then do
    call open_tables
    sel = 'all procedure division statements'
    tkey1   = 'STMT'
    "ispexec vput tkey1"
    call cobanldt ALL ,
                  COBANL03 ,
                  COBANL00 ,
                  COBANL01 ,
                  COBANL07 ,
                  COBANLF3 ,
                  COBANLLI ,
                  COBANLS3 ,
                  COBANL  ,
                  sel
  end
  when zcmd = 7
  then do
    call open_tables
    sel = 'all analyzed loadlibs'
    tkey1   = 'LOADLIB'
    "ispexec vput tkey1"
    call cobanldt ALL ,
                  COBANL04 ,
                  COBANL00 ,
                  COBANL01 ,
                  COBANL09 ,
                  COBANLF2 ,
                  COBANLL9 ,
                  COBANLS2 ,
                  COBANL  ,
                  sel
  end
  when zcmd = 8
  then do
    call cobanlpg
  end
  when zcmd = 9
  then do
    call open_tables
    tkey1   = 'OPTION'
    "ispexec vput tkey1"
    call cobanl03
  end
  when zcmd = 10
  then do
    zcmd = isplibd
    "ispexec display panel(ispllsa) command(zcmd)"
  end
  when zcmd = 11
  then do
    call isrddn
  end
  when zcmd = 12
  then do
    zcmd = sarea
    "ispexec display panel(ispsammn) command(zcmd)"
  end
  when zcmd = 13
  then do
    call cobasysi
  end
  otherwise  signal start
end

SIGNAL START

EXIT

open_tables:

"ISPEXEC TBOPEN COBANL00 NOWRITE"
"ISPEXEC TBOPEN COBANL01 NOWRITE"
"ISPEXEC TBOPEN COBANL02 NOWRITE"
"ISPEXEC TBOPEN COBANL03 NOWRITE"
"ISPEXEC TBOPEN COBANL04 NOWRITE"

return

failures:
say  "line = " strip(sourceline(sigl))
say  "Cond = " condition('C') condition('D')
say  "Error= " errortext(rc)
exit
