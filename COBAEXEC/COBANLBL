/*-------- REXX -------------------------------------------*/
/* Function   : build cobanal tables                       */
/*---------------------------------------------------------*/
/*
    trace ?r
*/

arg ptyp loadlib

say 'create analyse report started'
say 'parameter ptyp    = ' ptyp
say 'parameter loadlib = ' loadlib

"ispexec control errors return"
parse source xx yy procname rest
signal on syntax  name failures
signal on failure name failures

DSNAME   = LISTDSI(COBANAL FILE)
dsname   = sysdsname

if SYSDSN("'"DSNAME"'") ¬= 'OK'
then do
  say "DSN = " dsname " notfound"
  exit
end

"ISPEXEC EDIT DATASET('"dsname"') MACRO(COBA#MAC)"

if rc > 4
then do
  say  "/*----------------------------------------------------------*/"
  say  "Error during editing listing dataset "
  say  "Dataset = " dsname
  say  "Returncode = " rc
  say  "Possible reasons"
  say  "1. Regionsize to low  ---> increase region size"
  say  "2. Edit region size limited by installation modification"
  say  "   via ISRCONFG parameter EDITSTOR"
  say  "   ---> set parameter EDITSTOR to zero, increase region size"
  say  "            if not possible, pray and asked your  "
  say  "            systemprogrammer"
  say  "3. Wrong input dataset"
  say  "/*----------------------------------------------------------*/"
  zispfrc = 17
  "ispexec vput zispfrc shared"
  exit zispfrc
end

/*----- Cobal tables -----------------------------*/
/*                                                */
/*    COBANL00 Table Programm information         */
/*    COBANL01 Table Option   information         */
/*    COBANL02 Table Compiler information         */
/*    COBANL03 Table procedur information         */
/*    COBANL04 Table loadlib  information         */
/*                                                */
/*------------------------------------------------*/

"ISPEXEC TBEND    COBANL00"
"ISPEXEC TBEND    COBANL01"
"ISPEXEC TBEND    COBANL02"
"ISPEXEC TBEND    COBANL03"
"ISPEXEC TBEND    COBANL04"

loadlib  = strip(loadlib,L,' ')

if ptyp  ¬= 'E'
then do
  "ISPEXEC TBERASE  COBANL00"
  names = "COBREL COBVERS COMPREL COMPNAME COMPDATE COMPTIME ANZITEM ANZINSTR "
  names = names || "O1 O2 O3 O4 O5 O6 O7 O8 O9 O10 O11 O12 O13 O14 O15 O16 O17 "
  names = names || "O18 O19 O20 O21 O22 O23 O24 O25 O26 O27 O28 O29 O30 O31 "
  names = names || "O32 O33 O34 O35 O36 O37 O38 O39 O40 O41 O42 O43 O44 O45 "
  names = names || "P1 P2 P3 P4 P5 P6 P7 P8 P9 "
  names = names || "P10 P11 P12 P13 P14 P15 P16 P17 P18 P19 "
  names = names || "P20 P21 P22 P23 P24 P25 P26 P27 P28 P29 "
  names = names || "P30 P31 P32 P33 P34 P35 P36 P37 P38 P39 "
  names = names || "P40 P41 P42 P43 P44 P45 P46 P47 P48 P49 "
  names = names || "P50 P51 P52 P53 P54 P55 P56 P57 P58 P59 "
  names = names || "P60 P61 P62 P63 P64 P65 P66 P67 P68 P69 "
  names = names || "PGMNAME LOADLIB"
  "ISPEXEC TBCREATE COBANL00 KEYS(PGMKEY) NAMES("names")"

 "ISPEXEC TBERASE  COBANL01"
 "ISPEXEC TBCREATE COBANL01 KEYS(OPTION) NAMES(FN ANZPGM)"

 "ISPEXEC TBERASE  COBANL02"
 "ISPEXEC TBCREATE COBANL02 KEYS(COBVERS) NAMES(COBREL ANZPGM)"

 "ISPEXEC TBERASE  COBANL03"
 "ISPEXEC TBCREATE COBANL03 KEYS(STMT) NAMES(FN ANZPGM)"

 "ISPEXEC TBERASE  COBANL04"
 "ISPEXEC TBCREATE COBANL04 KEYS(LOADLIB)
          NAMES (ANZPGMCO ANZCOBVS ANZCOBII ANZCOB37 REPDAY REPDATE)"
end
else do
  "ISPEXEC TBOPEN   COBANL04"
  "ispexec tbget cobanl04"
  if rc = 0
  then do
    say  "loadlib = " loadlib " already analyzed"
    "ISPEXEC TBCLOSE  COBANL04"
    exit
  end
  "ISPEXEC TBOPEN   COBANL00"
  "ISPEXEC TBOPEN   COBANL01"
  "ISPEXEC TBOPEN   COBANL02"
  "ISPEXEC TBOPEN   COBANL03"
end

repday   = '---n/a---'
anzpgmco = 0
anzcobvs = 0
anzcobii = 0
anzcob37 = 0

repdate  = date('E')

if sysvar(systsoe) >= 2060 then repday = date('W',repdate,'E')

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD
"EXECIO 1 DISKR COBANAL"

IF RC = 2
THEN
  EOF = J
ELSE
  EOF = N

DO WHILE EOF = N
  parse PULL RECORD
  select
    when pos('was loaded',record) > 0
    then do
      do i     = 1 to 70
        fn1    = 'o'||i
        ini    = ' '
        call     value fn1,ini
        fn1    = 'p'||i
        call     value fn1,ini
      end
      cobrel   = 'NO Cobol'
      cobvers  = 'n/a'
      comprel  = 'n/a'
      compname = 'n/a'
      compdate = 'n/a'
      comptime = 'n/a'
      anzitem  = 'n/a'
      anzinstr = 'n/a'
      pgmname  = word(record,3)
      pgmkey   = pgmname||loadlib
      "ispexec tbadd cobanl00"
    end
    when pos('= Info =',record) > 0
    then do
      "EXECIO 1 DISKR COBANAL"
      parse PULL RECORD
      call pgm_record
    end
    when pos('= Timestamps =',record) > 0
    then do
      "EXECIO 1 DISKR COBANAL"
      parse PULL RECORD
      call timestamp_record
    end
    when pos('= Statistics =',record) > 0
    then do
      "EXECIO 1 DISKR COBANAL"
      parse PULL RECORD
      call statistic_record
    end
    when pos('= Options in effect =',record) > 0
    then do
      "EXECIO 1 DISKR COBANAL"
      parse PULL RECORD
      call option_record
      if cobrel     = 'OS/VS'
      then
        "ispexec tbmod cobanl00"
    end
    when pos('PROCEDURE DIVISION',record) > 0
    then do
      "EXECIO 1 DISKR COBANAL"
      parse PULL RECORD
      call procedure_record
      "ispexec tbmod cobanl00"
    end
    otherwise
  end
  "EXECIO 1 DISKR COBANAL"
  IF RC = 2
  THEN DO
    EOF = J
  END
END

"EXECIO 0 DISKR COBANAL (FINIS"
"FREE F(COBANAL)"

"ISPEXEC TBMOD   COBANL04"

"ISPEXEC TBSORT  COBANL00 FIELDS(PGMNAME)"
"ISPEXEC TBSORT  COBANL01 FIELDS(OPTION)"
"ISPEXEC TBSORT  COBANL02 FIELDS(COBREL,C,A,COBVERS,C,A)"
"ISPEXEC TBSORT  COBANL03 FIELDS(STMT)"
"ISPEXEC TBSORT  COBANL04 FIELDS(LOADLIB)"

"ISPEXEC TBCLOSE COBANL00"
"ISPEXEC TBCLOSE COBANL01"
"ISPEXEC TBCLOSE COBANL02"
"ISPEXEC TBCLOSE COBANL03"
"ISPEXEC TBCLOSE COBANL04"

say 'create analyse report ended'

exit

pgm_record:

pgmname       = word(record,2)
pgmkey        = pgmname||loadlib
cobrel        = word(record,4)
cobvers       = word(record,6)

if cobrel     = "COBOL"
then do
  cobvers     = word(record,5)
end

if cobrel     = "OS/VS"
then do
  cobvers     = word(record,7)
end

select
  when cobvers  = "Enterprise"
  then do
    cobrel      = cobrel || '/' || cobvers
    cobvers     = 'V' || word(record,7)
    cobvers     = strip(cobvers,T,'.')
    cobvers     = cobvers || 'R' || word(record,9)
    cobvers     = strip(cobvers,T,'.')
    cobvers     = cobvers || 'M' || word(record,11)
    cobvers     = strip(cobvers,T,'.')
  end
  when cobvers   ¬= "R1"
  then do
    cobvers     = 'V' || word(record,6)
    cobvers     = strip(cobvers,T,'.')
    cobvers     = cobvers || 'R' || word(record,8)
    cobvers     = strip(cobvers,T,'.')
    cobvers     = cobvers || 'M' || word(record,10)
    cobvers     = strip(cobvers,T,'.')
  end
  otherwise
end

"ispexec        tbget cobanl02"
if rc         > 0
then do
  anzpgm      = 1
  "ispexec      tbadd cobanl02"
end
else do
  anzpgm      = anzpgm + 1
  "ispexec      tbmod cobanl02"
end

pcomprel      = pos('Version',record)
if pcomprel   = 0
then do
  pcomprel    = pos('Release',record)
end
comprel       = substr(record,pcomprel)

return

timestamp_record:

compname      = word(record,4)

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

compdate      = word(record,2)

if cobrel     = 'OS/VS'
then do
  comptime    = word(record,4)
  anzcobvs    = anzcobvs + 1
end
else do
  if cobrel     = 'COBOL/2'
  then do
    if cobvers  = 'V1R1M0' | cobvers = 'V1R2M0'
    then do
      comptime  = word(record,7)
      compdate  = word(record,4)
    end
    else do
      wordindd  = wordpos("(european)",record)
      compdate  = word(record,wordindd+1)
      wordindt  = wordpos('Time:',record)
      comptime  = word(record,wordindt+1)
    end
    if pos('??',compdate) > 0
    then do
      p1        = pos('??',compdate)
      if substr(compdate,p1+2,2)  > 70 then oj = 19
                                       else oj = 20
      compdate  = overlay(oj,compdate,p1)
    end
    anzcobii    = anzcobii + 1
  end
  else do
    comptime    = word(record,7)
    compdate    = word(record,4)
    anzcob37    = anzcob37 + 1
  end
end

if pos('??',compdate) > 0
then do
  jp   = pos('??',compdate)
  compyear  = substr(compdate,jp+2,2)
  if compyear > '70'
  then compdate = overlay('19',compdate,jp)
  else compdate = overlay('20',compdate,jp)
end

anzpgmco      = anzpgmco + 1

anzitem       = 'n/a'
anzinstr      = 'n/a'

return

statistic_record:

anzitem       = word(record,6)

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD
anzinstr      = word(record,4)

return

option_record:

do i   = 1 to 70
  fn1  = 'o'||i
  ini  = ' '
  call   value fn1,ini
  fn1  = 'p'||i
  call   value fn1,ini
end

i      = 0

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'o'||i
  call   value fn,word(record,j)
  option='OPTION'
  call   value option,word(record,j)
  call   update_options
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'o'||i
  call   value fn,word(record,j)
  option='OPTION'
  call   value option,word(record,j)
  call   update_options
end

if cobrel     = 'OS/VS' then return

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'o'||i
  call   value fn,word(record,j)
  option='OPTION'
  call   value option,word(record,j)
  call   update_options
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'o'||i
  call   value fn,word(record,j)
  option='OPTION'
  call   value option,word(record,j)
  call   update_options
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'o'||i
  call   value fn,word(record,j)
  option='OPTION'
  call   value option,word(record,j)
  call   update_options
end

return

update_options:

"ispexec        tbget cobanl01"
if rc         > 0
then do
  anzpgm      = 1
  "ispexec      tbadd cobanl01"
end
else do
  anzpgm      = anzpgm + 1
  "ispexec      tbmod cobanl01"
end

return

procedure_record:

i      = 0

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

nword  = words(record)

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

if cobrel    ¬= 'COBOL/Enterprise' then return

"EXECIO 1 DISKR COBANAL"
parse PULL RECORD

do j   = 1 to nword
  i    = i + 1
  fn   = 'p'||i
  if word(record,j+1) = 'Y'
  then do
    call   value fn,word(record,j)
    option='STMT'
    call   value option,word(record,j)
    call   update_stmt
  end
  j = j + 1
end

return

update_stmt:

"ispexec        tbget cobanl03"
if rc         > 0
then do
  anzpgm      = 1
  "ispexec      tbadd cobanl03"
end
else do
  anzpgm      = anzpgm + 1
  "ispexec      tbmod cobanl03"
end

return

failures:
say  record
say  "line = " strip(sourceline(sigl))
say  "Cond = " condition('C') condition('D')
say  "Error= " errortext(rc)
exit
